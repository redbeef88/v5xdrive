{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"U`9aA+=)r+L1tzA.)-qi\">myVariable</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"430\" y=\"250\"><next><block type=\"v5_motion_spin\" id=\"BXM#uB^XjJB;A#II~%}P\"><field name=\"MOTOR\">ForwardRight</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_motion_spin\" id=\"-;t}`U/15*S=nBLza)cT\"><field name=\"MOTOR\">ForwardLeft</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_motion_spin\" id=\"Z,h.~C)e^ygaKqjtoaX]\"><field name=\"MOTOR\">RearRight</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_motion_spin\" id=\"EUW_jfO*)S*f=sj9FFA(\"><field name=\"MOTOR\">RearLeft</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_control_wait\" id=\"2D{VzaC,nmv(Mykp1RA^\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"cL!l@%f{+w{QOs*l[c`Q\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_motion_stop_motor\" id=\"V6p]R{WBs%~f!(wb9@A)\"><field name=\"MOTOR\">ForwardRight</field><next><block type=\"v5_motion_stop_motor\" id=\"(d_E({S3iB@zb_O4o`st\"><field name=\"MOTOR\">ForwardLeft</field><next><block type=\"v5_motion_stop_motor\" id=\"YC5M0]f=Z;GrlYYeEPrQ\"><field name=\"MOTOR\">RearRight</field><next><block type=\"v5_motion_stop_motor\" id=\"BLq}]wM^yt@Jah==+w1(\"><field name=\"MOTOR\">RearLeft</field></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></xml>","rconfig":[{"port":[1],"name":"ForwardRight","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[2],"name":"RearRight","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[3],"name":"ForwardLeft","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[4],"name":"RearLeft","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22}],"slot":1,"platform":"V5","sdkVersion":"20240219.10.00.00","appVersion":"3.1.0","minVersion":"3.1.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor ForwardRight = motor(PORT1, ratio18_1, true);\n\nmotor RearRight = motor(PORT2, ratio18_1, true);\n\nmotor ForwardLeft = motor(PORT3, ratio18_1, false);\n\nmotor RearLeft = motor(PORT4, ratio18_1, false);\n\ncontroller Controller1 = controller(primary);\n\n\n\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  ForwardRight.spin(forward);\n  ForwardLeft.spin(forward);\n  RearRight.spin(forward);\n  RearLeft.spin(forward);\n  wait(1.0, seconds);\n  ForwardRight.stop();\n  ForwardLeft.stop();\n  RearRight.stop();\n  RearLeft.stop();\n  return 0;\n}\n\n\nint main() {\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}