{"mode":"Blocks","workspace":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables><variable id=\"U`9aA+=)r+L1tzA.)-qi\">myVariable</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"430\" y=\"250\"><next><block type=\"v5_control_forever\" id=\"M@(;T%S)Z6~lCP9s]r,;\"><statement name=\"SUBSTACK\"><block type=\"v5_motion_set_motor_velocity\" id=\"(RF)B_FfH$$!VAy^A1VO\"><field name=\"MOTOR\">ForwardRight</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"R-x(7ktwBY5)nvhe33)r\"><field name=\"NUM\">50</field></shadow><block type=\"v5_operator_subtract\" id=\",f+|.f_ZZ%5481p@^z$E\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"TAgoVkD*dhrQ0!==g]PT\"><field name=\"NUM\">0</field></shadow><block type=\"v5_operator_subtract\" id=\"j.:cpwt-vu$#~d|pY$:p\"><value name=\"NUM1\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"|0{hssO+#Gv`.gn)4z6?\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis2</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"[BISRf;pEzJ2O$8;_WXT\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis1</field></block></value></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"@7/5N83`BZF`+bKLWmRo\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"mBP+aE;~STM`a4XTQ=S)\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis4</field></block></value></block></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"+.IhOcSK*+ia5}Rwhg$,\"><field name=\"MOTOR\">ForwardLeft</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"]xRZZs4ts=#~r|/dw)]m\"><field name=\"NUM\">50</field></shadow><block type=\"v5_operator_add\" id=\"$Y8oF#_yz7oNo*Py|wW%\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"]3R!`A[;dQgy{D}1GbAZ\"><field name=\"NUM\">0</field></shadow><block type=\"v5_operator_add\" id=\"zfHsnx.q-3)4m_ul_nr/\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"fC,W[V);f3f-rY4yDo*r\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"#!G+U)2=0eu%IRoFDjo%\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis2</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"@Lf_emCI-le]w00zeA2-\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"WCqEG_{~Qn2$^3{;g2`3\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis1</field></block></value></block></value><value name=\"NUM2\"><shadow type=\"math_number\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"8+LjG?b|Pp-K|}nfaRQM\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis4</field></block></value></block></value><next><block type=\"v5_motion_set_motor_velocity\" id=\";s,:R)[,f+dR,frE7Aqr\"><field name=\"MOTOR\">RearRight</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"/3DeCuS=^2V1WfGGXQnx\"><field name=\"NUM\">50</field></shadow><block type=\"v5_operator_subtract\" id=\"`98ysmxZK|06gn[+Jb7%\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"rRD1jex,kKnE3b@7esl}\"><field name=\"NUM\">0</field></shadow><block type=\"v5_operator_add\" id=\"*Z/Fd1gq`eqviU|E)9Nn\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"4$T{O]PPlT!-ax+f)qwq\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"4`ie7w}NmW?DAOme~n..\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis2</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"k6=I70]Hl@*{Bt9S(7,z\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"#U0@|p-Bsss%Q!Pu/DFh\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis1</field></block></value></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"]tVet}G?gwF_)pq|[koN\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"J@wuI+4+GbB9LQJmmm@m\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis4</field></block></value></block></value><next><block type=\"v5_motion_set_motor_velocity\" id=\"Si+$GQ`vnKCh+9AA}hs,\"><field name=\"MOTOR\">RearLeft</field><field name=\"UNITS\">pct</field><value name=\"VELOCITY\"><shadow type=\"math_number\" id=\"l]*p;0bNX!A%(zE%J^1a\"><field name=\"NUM\">50</field></shadow><block type=\"v5_operator_add\" id=\"qn{Xn#Qc,#^JTG]9Uc*|\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"L7=),Rr[T6ly;k+WDsm}\"><field name=\"NUM\">0</field></shadow><block type=\"v5_operator_subtract\" id=\"P]xo[M5bPNwhhTB]I~Jw\"><value name=\"NUM1\"><shadow type=\"math_number\" id=\"j{QhS$o3emy$m3Q1$9xQ\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"c4#9?a[81)248(.S)Xk/\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis2</field></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"fc42#;sceJA34F9?|4LV\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"rWsbb;R5T62#LK/VvIP^\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis1</field></block></value></block></value><value name=\"NUM2\"><shadow type=\"math_number\" id=\"hV`~Afoi?sqOq#KD*Gnl\"><field name=\"NUM\">0</field></shadow><block type=\"v5_sensing_position_of_controller\" id=\"9V01FtgyM`,N^n~kemyT\"><field name=\"CONTROLLER\">Controller1</field><field name=\"AXIS\">Axis4</field></block></value></block></value><next><block type=\"v5_motion_spin\" id=\"BXM#uB^XjJB;A#II~%}P\"><field name=\"MOTOR\">ForwardRight</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_motion_spin\" id=\"-;t}`U/15*S=nBLza)cT\"><field name=\"MOTOR\">ForwardLeft</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_motion_spin\" id=\"Z,h.~C)e^ygaKqjtoaX]\"><field name=\"MOTOR\">RearRight</field><field name=\"DIRECTION\">fwd</field><next><block type=\"v5_motion_spin\" id=\"EUW_jfO*)S*f=sj9FFA(\"><field name=\"MOTOR\">RearLeft</field><field name=\"DIRECTION\">fwd</field></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block></xml>","rconfig":[{"port":[1],"name":"ForwardRight","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[2],"name":"RearRight","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[3],"name":"ForwardLeft","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[4],"name":"RearLeft","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20240219.10.00.00","appVersion":"3.1.0","minVersion":"3.1.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false,"downloadLanguage":"python","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor ForwardRight = motor(PORT1, ratio18_1, true);\n\nmotor RearRight = motor(PORT2, ratio18_1, true);\n\nmotor ForwardLeft = motor(PORT3, ratio18_1, false);\n\nmotor RearLeft = motor(PORT4, ratio18_1, false);\n\ncontroller Controller1 = controller(primary);\n\n\n\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  while (true) {\n    ForwardRight.setVelocity(((Controller1.Axis2.position() - Controller1.Axis1.position()) - Controller1.Axis4.position()), percent);\n    ForwardLeft.setVelocity(((Controller1.Axis2.position() + Controller1.Axis1.position()) + Controller1.Axis4.position()), percent);\n    RearRight.setVelocity(((Controller1.Axis2.position() + Controller1.Axis1.position()) - Controller1.Axis4.position()), percent);\n    RearLeft.setVelocity(((Controller1.Axis2.position() - Controller1.Axis1.position()) + Controller1.Axis4.position()), percent);\n    ForwardRight.spin(forward);\n    ForwardLeft.spin(forward);\n    RearRight.spin(forward);\n    RearLeft.spin(forward);\n  wait(5, msec);\n  }\n  return 0;\n}\n\n\nint main() {\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}